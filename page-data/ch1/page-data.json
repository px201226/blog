{"componentChunkName":"component---src-templates-post-jsx","path":"/ch1/","result":{"data":{"site":{"siteMetadata":{"title":"SOOLAB"}},"markdownRemark":{"id":"0cf94437-bd98-5772-bde9-914727aa343e","excerpt":"1. 성능이란? 고객의 특정 업무를 대상으로 운영환경하에서 고객이 수긍할 수 있는 응답시간 내에 처리할 수 있는 거래량이라고 정의할 수 있다. 1.1 동시 사용자 성능 테스트나 운영 시 시스템에 발생하는 부하의 의미로 많이 사용되는 용어가 바로 동시 사용자다. 동시 사용자에 대한 정의는 개발자와 업무담당자간에 다르게 해석할 수 있다. 동시에 시스템에 트랜…","html":"<h2 id=\"1-성능이란\" style=\"position:relative;\">1. 성능이란?<a href=\"#1-%EC%84%B1%EB%8A%A5%EC%9D%B4%EB%9E%80\" aria-label=\"1 성능이란 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>고객의 특정 업무를 대상으로 운영환경하에서 고객이 수긍할 수 있는 응답시간 내에 처리할 수 있는 거래량이라고 정의할 수 있다.</li>\n</ul>\n<!-- more -->\n<h3 id=\"11-동시-사용자\" style=\"position:relative;\">1.1 동시 사용자<a href=\"#11-%EB%8F%99%EC%8B%9C-%EC%82%AC%EC%9A%A9%EC%9E%90\" aria-label=\"11 동시 사용자 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>성능 테스트나 운영 시 시스템에 발생하는 부하의 의미로 많이 사용되는 용어가 바로 동시 사용자다.</li>\n<li>\n<p>동시 사용자에 대한 정의는 개발자와 업무담당자간에 다르게 해석할 수 있다.</p>\n<ul>\n<li>동시에 시스템에 트랜잭션을 유발시키는 사용자</li>\n<li>시스템과 접속을 유지하고 있는 사용자 수</li>\n</ul>\n</li>\n<li>동시 사용자 수 = 요청 사용자 수 + 비요청 사용자 수</li>\n</ul>\n<h3 id=\"12-처리량\" style=\"position:relative;\">1.2 처리량<a href=\"#12-%EC%B2%98%EB%A6%AC%EB%9F%89\" aria-label=\"12 처리량 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>처리량은 서버가 일정 시간 내에 처리한 트랜잭션의 양이다.</li>\n<li>\n<p>서버가 인식하는 트랜잭션 양과 사용자가 인식하는 트랜젹션 양은 다르다.</p>\n<ul>\n<li>고객 입장에서는 화면 조회라는 1개의 트랜잭션을 보낸다.</li>\n<li>서버 입장에서는 API, DB, 웹 등 여러 쿼리 호출이 발생한다.</li>\n</ul>\n</li>\n<li>성능에서 중요한건 고객의 업무를 얼마나 빨리 처리할 수 있는가다.</li>\n<li>따라서 처리량의 평가 단위로서 TPS(Transaction Per Second)의 T는 고객의 업무 처리 건수가 되는 것이 의사소통이나 평가 하는데 적합하다.</li>\n</ul>\n<h3 id=\"13-응답시간\" style=\"position:relative;\">1.3 응답시간<a href=\"#13-%EC%9D%91%EB%8B%B5%EC%8B%9C%EA%B0%84\" aria-label=\"13 응답시간 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>\n<p>응답시간은 요청한 후부터 응답을 받을 때까지 소요된 시간으로 츠겆ㅇ하는 위치에 따라 여러 유형으로 나뉜다.</p>\n<ul>\n<li>클라이언트 응답 시간</li>\n<li>사용자가 요청한 후 부터 화면에 응답이 나타날 때까지 경과된 시간, 클라이언트 내부 처리시간도 포함된다.</li>\n<li>네트워크 응답 시간</li>\n<li>클라이언트에서 요청이 네트워크로 전송된 후부터 응답이 클라이언트 네트워크에 도착하는 데까지 경과되는 시간을 으미한다.</li>\n<li>서버 응답 시간</li>\n<li>서버가 사용자 요청을 받은 후 부터 처리 결과를 내보는는 데까지 경과된 응답시간이다. APM 기반으로 측정하는 경우가 여기에 해당된다.</li>\n<li>연계 응답 시간</li>\n<li>서버 처리 중 외부 시스템과 연계해서 처리할 경우 연계 서버에 요청을 보내 응답을 받기까지 경과된 시간이다.</li>\n</ul>\n</li>\n<li>\n<p>응답시간을 산술 평균으로 계산한다면 정확한 분석이 어려워 보통 백분율 응답시간을 사용한다.</p>\n<ul>\n<li>측정시간 동안 200개의 트랜잭션이 발생했고, 가장 응답시간이 빠른 것부터 줄세워 180등을 기록한 트랜잭션의 응답시간이 3.5였다면, 해당 업무의 90% 응답시간은 3.5초가 된다. <code class=\"language-text\">p90</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"14-자원\" style=\"position:relative;\">1.4 자원<a href=\"#14-%EC%9E%90%EC%9B%90\" aria-label=\"14 자원 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>서버의 CPU, 메모리, 디스크, 네트워크, WAS의 스레드 풀, DB연결 풀, 힙 메모리, 프로세스 수, 오픈 가능한 커서 수, 공유 캐시 메모리 등 물리적인 자원부터 소프트웨어 설정값까지 다양한 자원이 있다.</li>\n<li>성능 측면에서 자원은 한정된 값을 가진 시스템 구성 요소 중 애플리케이션이 동작할 때 사용하며, <code class=\"language-text\">부족한 경우\n나 사용량 변화에 따라 성능에 영향을 미치는 요소</code>를 의미한다.</li>\n</ul>\n<h4>1.4.1 적정성</h4>\n<ul>\n<li>자원 사용량에 대한 목표 달성과 부족 여부를 확인하는 것이다.</li>\n<li>자원이 부족한 경우 경함과 대기가 발생해 성능이 저하되므로 늘려줘야 하지만 다른 자원에 악영향을 주어 개선 효과를 보지 못할 수도 있다.</li>\n</ul>\n<h4>1.4.2 효율성</h4>\n<ul>\n<li>동일한 TPS를 기준으로 할 때 CPU나 메모리를 적게 사용하는 시스템이 효율적으로 작업을 수행한 것 이다.</li>\n<li>DB 사용량을 줄이고 애플리케이션 코드의 수행시간을 줄여 시스템 자원을 더 적게 사용하도록 개선함으로써 효율성을 높인다.</li>\n</ul>\n<h4>1.4.3 안정성</h4>\n<ul>\n<li>시스템 운영시간이 지남에 따라 성능이 저하되거나 장애가 발생하는 등의 문제가 발생하지 않아야 한다.</li>\n</ul>\n<h4>1.4.4 가용성</h4>\n<ul>\n<li>일정 기간 동안 시스템이 정상적으로 서비스된 시간 비율을 의미한다.</li>\n<li>카드 승인 시스템 같은 시스템은 장애는 사업 기회의 손실로 이어지므로 100%에 가까운 가용성을 유지해야 한다.</li>\n</ul>\n<h4>1.4.5 확장성</h4>\n<ul>\n<li>확장성은 향후 시스템 사용량 증가에 따라 시스템 증설이 필요할 때 각 자원이 얼마나 용이하게 증설될 수 있는가를 평가하는 것 이다.</li>\n</ul>\n<h2 id=\"2-성능-특성\" style=\"position:relative;\">2. 성능 특성<a href=\"#2-%EC%84%B1%EB%8A%A5-%ED%8A%B9%EC%84%B1\" aria-label=\"2 성능 특성 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"21-성능-곡선\" style=\"position:relative;\">2.1 성능 곡선<a href=\"#21-%EC%84%B1%EB%8A%A5-%EA%B3%A1%EC%84%A0\" aria-label=\"21 성능 곡선 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"22-성능에-대한-이해\" style=\"position:relative;\">2.2 성능에 대한 이해<a href=\"#22-%EC%84%B1%EB%8A%A5%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4\" aria-label=\"22 성능에 대한 이해 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>\n<p>성능은 업무와 시스템 특성에 따라 다르게 나타난다.</p>\n<ul>\n<li>시스템에 A,B 두 업무가 있다고 가정할 때 각 업무의 비중이 10%,90% 일 때와 90%,10% 일 때 시스템의 최대 성능과 응답시간이 다를 것이다.</li>\n<li>따라서 시스템의 성능을 이야기할 때는 업무의 고유한 특성과 시나리오하에서만 논의할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>모든 시스템에 일괄 적용할 수 있는 응답시간 기준은 없고 100% 만족시킬 수도 없다.</p>\n<ul>\n<li>화면 구성이 비슷하더라도 업무의 성격에 따라 처리하는 데이터의 양과 로직의 복잡도가 달라진다.</li>\n</ul>\n</li>\n<li>\n<p>동시 사용자 수가 시스템 성능을 의미하는 것은 아니다.</p>\n<ul>\n<li>웹 기반 시스템에서는 동시 사용자(접속자) 수 보다 초당 들어오는 요청의 수, 웹 서버에 물리적으로 맺어진 네트워크 연결 수가 성능에 더 큰 영향을 준다.</li>\n</ul>\n</li>\n<li>\n<p>시스템 성능은 비용과 수익으로 평가할 수도 있다.</p>\n<ul>\n<li>시스템 자원 부족으로 서버를 추가 도입하거나 부족한 자원을 증설하기 위해서는 비용이 든다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-성능-이론\" style=\"position:relative;\">3. 성능 이론<a href=\"#3-%EC%84%B1%EB%8A%A5-%EC%9D%B4%EB%A1%A0\" aria-label=\"3 성능 이론 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"31-기초-성능-이론\" style=\"position:relative;\">3.1 기초 성능 이론<a href=\"#31-%EA%B8%B0%EC%B4%88-%EC%84%B1%EB%8A%A5-%EC%9D%B4%EB%A1%A0\" aria-label=\"31 기초 성능 이론 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"32-사용률-이론\" style=\"position:relative;\">3.2 사용률 이론<a href=\"#32-%EC%82%AC%EC%9A%A9%EB%A5%A0-%EC%9D%B4%EB%A1%A0\" aria-label=\"32 사용률 이론 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"33-비율-분석\" style=\"position:relative;\">3.3 비율 분석<a href=\"#33-%EB%B9%84%EC%9C%A8-%EB%B6%84%EC%84%9D\" aria-label=\"33 비율 분석 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h2 id=\"4-성능-테스트\" style=\"position:relative;\">4. 성능 테스트<a href=\"#4-%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"4 성능 테스트 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"41-성능-테스트-유형\" style=\"position:relative;\">4.1. 성능 테스트 유형<a href=\"#41-%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9C%A0%ED%98%95\" aria-label=\"41 성능 테스트 유형 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"42-성능-테스트-구성-요소\" style=\"position:relative;\">4.2 성능 테스트 구성 요소<a href=\"#42-%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"42 성능 테스트 구성 요소 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"43-성능-테스트-시-주의사항\" style=\"position:relative;\">4.3 성능 테스트 시 주의사항<a href=\"#43-%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"43 성능 테스트 시 주의사항 permalink\" class=\"anchor-header after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>성능 테스트는 통상 제약된 환경에서 테스트하므로 실제 운영 시스템 대상으로 테스트를 진행했더라도 운영에 들어가면 예상치 못한 장애가 발생하기도 한다.</li>\n</ul>\n<h4>4.3.1 테스트 데이터</h4>\n<ul>\n<li>\n<p>테스트 데이터에 따라 확연히 다른 결과가 나오는 경우도 많기 때문에 성능 테스트 시에는 테스트 데이터에 대해 다음과 같은 사항을 고려해야 한다.</p>\n<ul>\n<li><strong>시스템 데이터(데이터 대상 DB)</strong></li>\n<li>통상 전체 성능의 70% 이상이 DB에 자우되는데, 테스트 대상이 되는 테이블의 데이터 양이나 패턴이 다르면 쿼리의 실행계획이 달라져 성능이 다르게 나타난다.</li>\n<li>데이터가 소량이면 실제 디스크 입출력이 일어나야 하는데 모두 메모리에 로드되어 성능이 빠른 것으로 착각할 수 있다.</li>\n<li>원칙적으로 성능 테스트는 실 데이터가 전환된 데이터베이스를 대상으로 수행해야 한다.</li>\n<li><strong>스크립트 데이터(입력용 데이터)</strong></li>\n<li>소량의 스크립트 데이터를 사용한 경우 테스트 초기 입력 데이터가 DB에 메모리에 캐시됨으로써 성능이 좋게 나올 수 있다.</li>\n<li><strong>초기 데이터 제로 테이블</strong></li>\n<li>시스템을 오픈할 때 비어있는 테이블은 시간이 지나면서 성능 문제를 일으키는 경우가 많다.</li>\n<li>초기 건수가 0이지만 운영하면서 건수가 큰 폭으로 증가하는 테이블은 데이터가 쌓여있을 때의 통계정보로 테이블 통계정보를 변경해 달라고 요청해야 한다.</li>\n</ul>\n</li>\n</ul>\n<h4>4.3.2 화면 처리시간</h4>\n<ul>\n<li>대부분의 성능 테스트 도구는 클라이언트 측 네트워크 시간을 기준으로 응답시간을 측정한다.</li>\n<li>클라이언트마다 PC 환경이 다르고, 테스트 환경에서는 클라이언트에서 수행되는 로직이 동작할 경우 CPU 등 자원부족으로 성능 측정이 부정확하게 되기 때문이다.</li>\n<li>중요 화면에 대해서는 화면 응답시간을 측정해 성능 기준 만족 여부를 평가하고, 서버 처리시간과 비교 분석해 클라이언트 성능 개선이 필요한지 여부를 판단한다.</li>\n</ul>\n<h4>4.3.3 네트워크</h4>\n<ul>\n<li>성능 테스트 시 부하 발생기가 연결돼 있는 스위치를 바로 백본 스위치에 연결해 테스트를 수행하는 경우가 많다.</li>\n<li>이는 내부 네트워크와 서버 중심으로 처리시간을 측정하고, 외부 네트워크는 제외하는 것 이다.</li>\n<li>서버 문제가 없음에도 네트워크 지연으로 애플리케이션 종료가 지연되어 작업 프로세스나 스레드 풀이 소진되어 큐잉이 발생함으로써 전체 사용자가 성능 저하를 경함할 수 있다.</li>\n</ul>\n<h4>4.3.4 가상 사용자 특성</h4>\n<ul>\n<li>실사용자라면 응답이 20~30초씩만 늦어져도 기다리지 못하고 다시 반복요청한다.</li>\n<li>즉 성능 테스트하에서는 특정 가상 사용자 수 이상 큐잉이 발생할 가능성은 낮지만 운영 환경에서는 동일 사용자에 의한 서비스 반복 요청이 이뤄져 대량의 큐잉이 발생할 수 있다.</li>\n<li>테스트 환경에서만 발생하는 패턴임에도 실제 환경에서도 발생하는 패턴으로 인식해버릴 수도 있다.</li>\n</ul>\n<h4>4.3.5 업무 시나리오</h4>\n<ul>\n<li>각 테스트 대상 업무에서 부수적인 서비스 호출을 제외하고 중요 서비스 호출만 시나리오에 포함시키면 운영 시 측정한 성능과 테스트 시 측정한 성능이 달라질 수 있다.</li>\n<li>부하 발생기가 일으키는 서비스 요청 이외에 백엔드에서 수행되는 배치나 후속 작업들을 생략하는 것이다.</li>\n<li>성능 측정 대상으로서 중요성은 떨어지더라도 정상적인 운영 시 시스템 백엔드에서 일정하게 발생하는 부하가 있다면 성능 테스트 시나리오에 포함해야 한다.</li>\n</ul>\n<h4>4.3.6 대상 업무와 성능 개선</h4>\n<ul>\n<li>자바 기반 애플리케이션의 경우 한 개의 업무에서 발생한 메모리 누수나 대량 데이터 조회 문제로도 전체 업무에 성능 저하와 장애가 발생할 수 있다.</li>\n<li>성능 테스트에서 목표를 만족한 것은 시스템 오픈을 위한 최소한의 기준일 뿐, 안정적으로 운영될 것이라고 담보하지는 못한다.</li>\n</ul>","frontmatter":{"title":"1부 - 성능 기초","date":"February 03, 2022","update":"February 03, 2022","tags":["실무로 배우는 시스템 성능 최적화"],"series":null},"fields":{"slug":"/ch1/","readingTime":{"minutes":14.55}}},"seriesList":{"edges":[{"node":{"id":"bad021b0-8468-5808-8daa-8cf3434c19ae","fields":{"slug":"/ch1/"},"frontmatter":{"title":"1장 - 신뢰할 수 있고 확장 가능하며 유지보수하기 쉬운 애플리케이션"}}},{"node":{"id":"1c3bf38a-5822-589b-ae08-5e0182388d1a","fields":{"slug":"/ch2/"},"frontmatter":{"title":"2장 - 데이터 모델과 질의 언어"}}},{"node":{"id":"68b667f0-fbb0-5312-bba3-7728df4a1d74","fields":{"slug":"/ch3/"},"frontmatter":{"title":"3장 - 저장소와 검색"}}},{"node":{"id":"22d5ddb1-57c0-5f00-8699-cefd462d1666","fields":{"slug":"/ch4/"},"frontmatter":{"title":"4장 - 부호화와 발전"}}},{"node":{"id":"137b1767-6e4e-5fdf-a9f9-0b3798cbe37e","fields":{"slug":"/ch5/"},"frontmatter":{"title":"5장 - 복제"}}},{"node":{"id":"7a8cd6aa-bb6e-55b4-9854-4288e54769ee","fields":{"slug":"/ch6/"},"frontmatter":{"title":"6장 - 파티셔닝"}}},{"node":{"id":"0d8cea97-6f8f-5e28-b4ad-7e48cc2d2e46","fields":{"slug":"/ch7/"},"frontmatter":{"title":"7장 - 트랜잭션"}}},{"node":{"id":"645ed70a-de7e-58f4-a2a3-cb643a99e30a","fields":{"slug":"/ch8/"},"frontmatter":{"title":"8장 - 분산 시스템의 골칫거리"}}},{"node":{"id":"0cf94437-bd98-5772-bde9-914727aa343e","fields":{"slug":"/ch1/"},"frontmatter":{"title":"1부 - 성능 기초"}}},{"node":{"id":"130946b3-e281-5f87-8dd1-cef00be4a774","fields":{"slug":"/ch2/"},"frontmatter":{"title":"2부 - 성능 개선"}}},{"node":{"id":"34735664-ed59-5784-a071-1227717349e3","fields":{"slug":"/ch3/"},"frontmatter":{"title":"3부 - 화면 응답시간 분석"}}},{"node":{"id":"a2c4d2d8-b012-5449-9251-3bcc368876ea","fields":{"slug":"/ch4/"},"frontmatter":{"title":"4부 - 프로세스 이해하기"}}},{"node":{"id":"ee53721c-3561-5f47-9065-76762ebce369","fields":{"slug":"/ch5/"},"frontmatter":{"title":"5부 - 소스코드 최적화"}}},{"node":{"id":"0ee045de-1f2e-5326-840b-f7513c16f2d7","fields":{"slug":"/ch6/"},"frontmatter":{"title":"6부 - SQL 최적화"}}},{"node":{"id":"b3880869-c0db-5d58-948e-92985250cf2d","fields":{"slug":"/ch7/"},"frontmatter":{"title":"7부 - 애플리케이션 입장에서의 SQL 튜닝"}}},{"node":{"id":"cf31c6e7-91a8-55a7-beea-5dca2e2460fa","fields":{"slug":"/spring-autoconfigure/"},"frontmatter":{"title":"SpringBoot AutoConfiguration 시작하기"}}},{"node":{"id":"bbcc04f9-2935-5753-9a7e-cd8fdfcc662c","fields":{"slug":"/behavior/"},"frontmatter":{"title":"디자인 패턴 - 행동 패턴"}}},{"node":{"id":"f3e9b018-dcf2-5066-be00-909086dcbff2","fields":{"slug":"/struct/"},"frontmatter":{"title":"디자인 패턴 - 구조 패턴"}}},{"node":{"id":"d7818847-fabd-52c1-94c6-4907e05a3490","fields":{"slug":"/create/"},"frontmatter":{"title":"디자인 패턴 - 생성 패턴"}}},{"node":{"id":"c7e63a70-6b62-52e8-ac0f-d5dcdecd7147","fields":{"slug":"/Exactly_Once_Semantics/"},"frontmatter":{"title":"카프카는 어떻게 Exactly-Once Semantics 보장하나?"}}},{"node":{"id":"1cda8db3-a1d2-56f9-85e0-29bac23a0650","fields":{"slug":"/trasaction_in_kafka/"},"frontmatter":{"title":"카프카에서의 Transactions"}}},{"node":{"id":"09549337-253c-501f-ba42-533815a37e3c","fields":{"slug":"/\benabling_exactly_once_kafka_streams/"},"frontmatter":{"title":"카프카 스트림즈의 정확히 한 번"}}},{"node":{"id":"3dcd2238-18eb-57ef-9cd3-c0177a3c1954","fields":{"slug":"/Amazon SQS Deep Dive/"},"frontmatter":{"title":"Amazon SQS 딥다이브"}}},{"node":{"id":"d814ac35-d925-5139-ac77-ee416f12dbcb","fields":{"slug":"/Spring Cloud AWS Messaging Module Best Practice/"},"frontmatter":{"title":"Spring Cloud AWS Messaging 모듈 문제점 및 튜닝"}}},{"node":{"id":"ff41f5b0-73ba-5595-aebb-35db1d98dc0b","fields":{"slug":"/java-collection-wrapper/"},"frontmatter":{"title":"Collection Wrapper 클래스를 이용한 Service 계층 리팩토링 "}}},{"node":{"id":"814be12c-5d81-5869-910d-04f5c3fce410","fields":{"slug":"/spring-cache-hierarchy/"},"frontmatter":{"title":"Spring Cache 로 캐시 계층 구조 사용하기"}}},{"node":{"id":"784bc412-aba6-543c-bf75-23eaddb9ed64","fields":{"slug":"/redis-event-notifications/"},"frontmatter":{"title":"Redis Keyspace Notifications에 대해 알아보자"}}},{"node":{"id":"d488972a-385d-5d13-bbfe-08c074fa8372","fields":{"slug":"/jpa-slow-cause/"},"frontmatter":{"title":"JPA가 느릴 수 밖에 없는 원초적인 이유"}}},{"node":{"id":"2dd75ae1-e168-5f46-a340-b7f8dd712d7a","fields":{"slug":"/ehcache3/"},"frontmatter":{"title":"Ehcache3 캐시 라이브러리 소개 (with Spring Boot)"}}},{"node":{"id":"d21ad180-cffd-54ce-a320-34e599a39453","fields":{"slug":"/mysql-primary-key-design/"},"frontmatter":{"title":"고성능을 위한 MySQL Primary Key 설계 전략"}}},{"node":{"id":"f1907721-044b-5781-8b3f-9df0fbf38ec8","fields":{"slug":"/tomcat/"},"frontmatter":{"title":"Apache Tomcat 이해하기(NIO Connector 중심)"}}},{"node":{"id":"bb461b3a-0c19-5caf-9d09-08989e720b7f","fields":{"slug":"/socket_option/"},"frontmatter":{"title":"Java의 Socket Option 정리"}}},{"node":{"id":"d1df0b87-5078-5aa9-a1a5-560935978720","fields":{"slug":"/tomcat-connection/"},"frontmatter":{"title":"Tomcat은 어떻게 Connection을 관리할까?"}}},{"node":{"id":"4e19ecdf-4b0a-5c17-b791-a4ef410644d8","fields":{"slug":"/spring-core-container/"},"frontmatter":{"title":"스프링으로 알아보는 IoC 컨테이너의 원리와 이해"}}},{"node":{"id":"0c587f26-df98-5bfd-8cfb-b25bd55ecd65","fields":{"slug":"/socket_internal/"},"frontmatter":{"title":"요청이 급증하는 상황의 Connection reset by peer 트러블 슈팅"}}},{"node":{"id":"5763939a-d1a2-5d54-919f-c97fd517b792","fields":{"slug":"/mysql-transaction-lock/"},"frontmatter":{"title":"MySQL 잠금과 트랜잭션 Deep Dive"}}}]},"previous":{"fields":{"slug":"/ch8/"},"frontmatter":{"title":"8장 - 분산 시스템의 골칫거리"}},"next":{"fields":{"slug":"/ch2/"},"frontmatter":{"title":"2부 - 성능 개선"}}},"pageContext":{"id":"0cf94437-bd98-5772-bde9-914727aa343e","series":null,"previousPostId":"645ed70a-de7e-58f4-a2a3-cb643a99e30a","nextPostId":"130946b3-e281-5f87-8dd1-cef00be4a774"}},"staticQueryHashes":[],"slicesMap":{}}