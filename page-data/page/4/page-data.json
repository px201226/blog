{"componentChunkName":"component---src-templates-post-pagination-jsx","path":"/page/4/","result":{"data":{"paging":{"group":[{"fieldValue":"데이터 중심 애플리케이션 설계","totalCount":7},{"fieldValue":"실무로 배우는 시스템 성능 최적화","totalCount":3}],"nodes":[{"excerpt":"1. 기본 방향 2. HTTP의 이해 2.1 프로토콜 구조 기본적으로 클라이언트 서버 간에 요청과 응답이 1:1 구조를 띠고 있다. HTTP 요청/응답 모두 헤더와 본문으로 구성돼 있다. 2.2 HTTP 요청 요청은 헤더와 본문으로 나뉘고, 헤더는 다시 요청 라인과 MIME 헤더로 나뉜다. 요청 헤더 요청 방식으로는 8가지가 있다. , , , , , , …","fields":{"slug":"/ch3/"},"frontmatter":{"date":"February 05, 2022","update":"Feb 05, 2022","title":"3부 - 화면 응답시간 분석","description":null,"tags":["실무로 배우는 시스템 성능 최적화"]}},{"excerpt":"1장. 기본 자세 적극적이고 도전적인 자세를 갖춰라 다른 사람의 설명과 의견에 귀 기울여라 종합적인 시각을 가져라 실행하고 비교하라 2장. 성능 분석 시작하기 클라이언트부터 시작해 웹 서버, 애플리케이션 서버, DB 서버 등 여러 서버를 거쳐서 동작한다. 이런 구성에서 성능 저하가 발생했을 땐 네트워크를 기준으로 각 서버가 전체 응답시간에서 차지하는 비중…","fields":{"slug":"/ch2/"},"frontmatter":{"date":"February 04, 2022","update":"Feb 04, 2022","title":"2부 - 성능 개선","description":null,"tags":["실무로 배우는 시스템 성능 최적화"]}},{"excerpt":"1. 성능이란? 고객의 특정 업무를 대상으로 운영환경하에서 고객이 수긍할 수 있는 응답시간 내에 처리할 수 있는 거래량이라고 정의할 수 있다. 1.1 동시 사용자 성능 테스트나 운영 시 시스템에 발생하는 부하의 의미로 많이 사용되는 용어가 바로 동시 사용자다. 동시 사용자에 대한 정의는 개발자와 업무담당자간에 다르게 해석할 수 있다. 동시에 시스템에 트랜…","fields":{"slug":"/ch1/"},"frontmatter":{"date":"February 03, 2022","update":"Feb 03, 2022","title":"1부 - 성능 기초","description":null,"tags":["실무로 배우는 시스템 성능 최적화"]}},{"excerpt":"분산 시스템을 다루는 것은 한 컴퓨터에서 실행되는 소프트웨어를 작성하는 일과는 다르다. 뭔가 잘못될 수 있고 새롭고 흥미진진한 방법이 많다는 점이다. 이번장은 분산 시스템에서 잘못될지도 모르는 것에 관한 개요이다. 결함과 부분 장애 단일 컴퓨터에서 실행되는 소프트웨어는 하드웨어가 올바르게 동작하면 같은 연산은 항상 같은 결과를 낸다. 좋은 소프트웨어가 설…","fields":{"slug":"/ch8/"},"frontmatter":{"date":"February 02, 2022","update":"Feb 02, 2022","title":"8장 - 분산 시스템의 골칫거리","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"애매모호한 트랜잭션의 개념 ACID의 의미 트랜잭션이 제공하는 안정성 보장은 원자성(Atomicity), 일관성(Consistency), 격리성(Isolation), 지속성(Durability) 을 의미하는  로 잘 알려져 있다. 그러나 현실에서는 데이터베이스마다 ACID 구현이 재각각이다. 시스템에서 실제로 어떤 것을 기대할 수 있는지 분명하지 않다. …","fields":{"slug":"/ch7/"},"frontmatter":{"date":"February 01, 2022","update":"Feb 01, 2022","title":"7장 - 트랜잭션","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"파티셔닝과 복제 데이터셋이 매우 크거나 질의 처리량이 매우 높다면 복제만으로 부족하고 데이터를 파티션으로 쪼갤 필요가 있다. 이 작업을 이라고 한다. 파티션을 나눌 때는 보통 각 데이터 단위(레코드, 로우, 문서)가 하나의 파티션에 속하게 한다. 데이터 파티셔닝을 원하는 주된 이유는 확장성이다. 보통 복제와 파티셔닝을 함께 적용해 각 파티션의 복사본을 여…","fields":{"slug":"/ch6/"},"frontmatter":{"date":"January 28, 2022","update":"Jan 28, 2022","title":"6장 - 파티셔닝","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"복제 란 네트워크로 연결된 여러 장비에 동일한 데이터 복사본을 유지한다는 의미이다. 데이터 복제가 필요한 이유는 다음과 같다. 지리적으로 사용자와 가깝게 데이터를 유지해 지연 시간을 줄인다. 시스템의 일부에 장애가 발생해도 지속적으로 동작할 수 있게 해 가용성을 높인다. 읽기 질의를 제공하는 장비의 수를 확장해 읽기 처리량을 늘린다. 복제에서 모든 어려움…","fields":{"slug":"/ch5/"},"frontmatter":{"date":"January 23, 2022","update":"Jan 23, 2022","title":"5장 - 복제","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"데이터 타입이나 스키마가 변경될 때 애플리케이션 코드에 대한 변경이 종종 발생한다. 하지만 대규모 애플리케이션에서 코드 변경은 대게 즉시 반영할 수 없다. 서버 측 애플리케이션에서는 한 번에 몇 개의 노드에 새 버전을 배포하고 새로운 버전이 원할하게 실행되는지 확인한 다음 서서히 모든 노드에서 실행되게 하는 방식이 있다. 클라이언트 측 애플리케이션은 사용…","fields":{"slug":"/ch4/"},"frontmatter":{"date":"January 18, 2022","update":"Jan 18, 2022","title":"4장 - 부호화와 발전","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"데이터베이스를 강력하게 만드는 데이터 구조 일반적으로 파일 추가 작업은 매우 효율적이기 때문에 로그(log)를 기록할 때 파일을 사용한다. 하지만 파일에서 특정 로그키를 찾을 때마다  만큼 걸리기 때문에 성능이 매우 좋지 않다. 데이터베이스에서 특정 키의 값을 효율적으로 찾기 위해서는 가 필요하다. 색인의 일반적인 개념은 어떤 부가적인 메타데이터를 유지하…","fields":{"slug":"/ch3/"},"frontmatter":{"date":"January 14, 2022","update":"Jan 14, 2022","title":"3장 - 저장소와 검색","description":null,"tags":["데이터 중심 애플리케이션 설계"]}},{"excerpt":"데이터  모델은 소프트웨어가 할 수 있는 일과 할 수 없는 일에 지대한 영향을 주므로 애플리케이션에 적합한 데이터 모델을 선택하는 작업은 상당히 중요하다. 관계형 모델과 문서 모델 오늘날 가장 장 알려진 데이터 모델은 관계형 모델을 기반으로 한 SQL 이다. 데이터는 관계(relation) 로 구성되고 각 관계는 순서 없는 튜플(tuple) 의 모음이다.…","fields":{"slug":"/ch2/"},"frontmatter":{"date":"January 10, 2022","update":"Jan 10, 2022","title":"2장 - 데이터 모델과 질의 언어","description":null,"tags":["데이터 중심 애플리케이션 설계"]}}]},"totalMarkdown":{"group":[{"fieldValue":"AWS","totalCount":2},{"fieldValue":"JPA","totalCount":1},{"fieldValue":"Java","totalCount":8},{"fieldValue":"Tomcat","totalCount":2},{"fieldValue":"데이터 중심 애플리케이션 설계","totalCount":8},{"fieldValue":"데이터베이스","totalCount":1},{"fieldValue":"디자인 패턴","totalCount":3},{"fieldValue":"레디스","totalCount":1},{"fieldValue":"스프링","totalCount":5},{"fieldValue":"실무로 배우는 시스템 성능 최적화","totalCount":7},{"fieldValue":"카프카","totalCount":3}],"nodes":[{"fields":{"slug":"/java-nio-channel/"}},{"fields":{"slug":"/spring-core-container/"}},{"fields":{"slug":"/tomcat-connection/"}},{"fields":{"slug":"/java-nio-buffer/"}},{"fields":{"slug":"/socket_option/"}},{"fields":{"slug":"/tomcat/"}},{"fields":{"slug":"/java-concurrency-lock/"}},{"fields":{"slug":"/java-concurrency-deadlock/"}},{"fields":{"slug":"/java-concurrency-executor/"}},{"fields":{"slug":"/java-concurrency-model/"}},{"fields":{"slug":"/java-concurrency/"}},{"fields":{"slug":"/mysql-primary-key-design/"}},{"fields":{"slug":"/ehcache3/"}},{"fields":{"slug":"/jpa-slow-cause/"}},{"fields":{"slug":"/redis-event-notifications/"}},{"fields":{"slug":"/spring-cache-hierarchy/"}},{"fields":{"slug":"/java-collection-wrapper/"}},{"fields":{"slug":"/Spring Cloud AWS Messaging Module Best Practice/"}},{"fields":{"slug":"/Amazon SQS Deep Dive/"}},{"fields":{"slug":"/\benabling_exactly_once_kafka_streams/"}},{"fields":{"slug":"/trasaction_in_kafka/"}},{"fields":{"slug":"/Exactly_Once_Semantics/"}},{"fields":{"slug":"/create/"}},{"fields":{"slug":"/struct/"}},{"fields":{"slug":"/behavior/"}},{"fields":{"slug":"/spring-autoconfigure/"}},{"fields":{"slug":"/ch7/"}},{"fields":{"slug":"/ch6/"}},{"fields":{"slug":"/ch5/"}},{"fields":{"slug":"/ch4/"}},{"fields":{"slug":"/ch3/"}},{"fields":{"slug":"/ch2/"}},{"fields":{"slug":"/ch1/"}},{"fields":{"slug":"/ch8/"}},{"fields":{"slug":"/ch7/"}},{"fields":{"slug":"/ch6/"}},{"fields":{"slug":"/ch5/"}},{"fields":{"slug":"/ch4/"}},{"fields":{"slug":"/ch3/"}},{"fields":{"slug":"/ch2/"}},{"fields":{"slug":"/ch1/"}}]}},"pageContext":{"skip":30,"totalPage":5,"currentPage":4}},"staticQueryHashes":[],"slicesMap":{}}