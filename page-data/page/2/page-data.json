{"componentChunkName":"component---src-templates-post-pagination-jsx","path":"/page/2/","result":{"data":{"paging":{"group":[{"fieldValue":"AWS","totalCount":2},{"fieldValue":"JPA","totalCount":1},{"fieldValue":"Java","totalCount":1},{"fieldValue":"데이터베이스","totalCount":1},{"fieldValue":"레디스","totalCount":1},{"fieldValue":"스프링","totalCount":3},{"fieldValue":"카프카","totalCount":1}],"nodes":[{"excerpt":"synchronized 락의 단점 락이 걸린 객체에서 일어나는 동기화 작업은 모두 균등하게 취급된다. 락 획득/해제는 반드시 메서드 수준이나 메서드 내부의 동기화 블록 안에서 이루어져야 한다. 락을 얻지 못한 스레드는 블로킹된다. 락을 얻지 못할 경우, 락을 얻어 처리를 계속하려고 시도하는 것조차 불가능하다. 락이 걸린 데이터에 모든 연산이 동등하게 취급…","fields":{"slug":"/java-concurrency/"},"frontmatter":{"date":"August 14, 2023","update":"Aug 14, 2023","title":"Java의 동시성 프로그래밍 - overview","description":null,"tags":["Java"]}},{"excerpt":"Primary Key 설계의 중요성 InnoDB 기준으로 MySQL은 Primary Key를 기준으로 데이터를 클러스터링한다. \n클러스터링이라는 용어는 인접한 키 값이 있는 레코드가 물리적으로도 인접하게 저장된다는 것을 말한다.\n즉, 논리적인 PK 값에 의해 레코드의 물리적인 위치가 결정된다.\nPK값이 변경된다면 해당 레코드의 물리적인 위치도 변경된다는 …","fields":{"slug":"/mysql-primary-key-design/"},"frontmatter":{"date":"August 06, 2023","update":"Aug 06, 2023","title":"고성능을 위한 MySQL Primary Key 설계 전략","description":null,"tags":["데이터베이스"]}},{"excerpt":"Spring Boot2 + Ehcache3 Spring Cache Abstract 와 Ehcache3 모듈 설정 방법을 알아본다. Gradle Dependency 설정 캐시 구성 Ehcache3 버전부터는 JSR-107을 자바 표준 인터페이스를 구현하였다.\n캐시에 대한 자바 표준 인터페이스를 JCache 라고 한다.\nJPA 구현체에 Hibernate 와 …","fields":{"slug":"/ehcache3/"},"frontmatter":{"date":"July 24, 2023","update":"Jul 24, 2023","title":"Ehcache3 캐시 라이브러리 소개 (with Spring Boot)","description":null,"tags":["스프링"]}},{"excerpt":"N+1 쿼리는 무엇을 의마하나? JPA의 한계를 설명하기 위해서는 N+1 쿼리가 발생하는 원초적인 원인에 대해 이해하는 것이 필요하다. JPA를 사용하다보면 N+1 쿼리를 경험할 수 있는데, 기술적인 방법으로 N+1 쿼리를 해결하는 게시물은 많지만, 왜 이러한 쿼리가 발생하는지에 대해 정확히 설명하는 블로그는 찾기 어렵다. 본 포스팅에서는 N+1 쿼리가 …","fields":{"slug":"/jpa-slow-cause/"},"frontmatter":{"date":"July 21, 2023","update":"Jul 21, 2023","title":"JPA가 느릴 수 밖에 없는 원초적인 이유","description":null,"tags":["JPA"]}},{"excerpt":"Redis Keyspace Notifications Redis에는 키 및 값의 변경 사항을 실시간으로 수신할 수 있는 Pub/Sub 기능을 제공한다. Notifications 유형 Redis 데이터 공간에 영향을 미치는 모든 작업에 대해 다음 두 가지 유형의 이벤트가 발생된다.\n예를 들어 키를 삭제하는 명령인  이 실행되면 Redis는 다음 두 가지 명령…","fields":{"slug":"/redis-event-notifications/"},"frontmatter":{"date":"July 19, 2023","update":"Jul 19, 2023","title":"Redis Keyspace Notifications에 대해 알아보자","description":null,"tags":["레디스"]}},{"excerpt":"메모리 계층 구조 메모리를 필요에 따라 여러 가지 종류로 나누어 둠을 의미한다. 이떄 필요한 대부분의 경우는 CPU가 메모리에 더 빨리 접근하기 위함이다. 자주 쓰는 데이터는 계속 자주 쓰인다. 자주 쓰이는 데이터는 계속 자주 쓰이고, 자주 쓰이지 않는 데이터는 계속 자주 쓰이지 않는다. 자주 쓰이으는 데이터는 전체 데이터 양에 비해 작은 양이기 때문에,…","fields":{"slug":"/spring-cache-hierarchy/"},"frontmatter":{"date":"July 16, 2023","update":"Jul 16, 2023","title":"Spring Cache 로 캐시 계층 구조 사용하기","description":null,"tags":["스프링"]}},{"excerpt":"복잡한 Service 계층 Service 계층은 애플리케이션의 핵심 비즈니스 로직을 수행하는 중심적인 역할을 한다.\n이 계층은 데이터 유효성 검증, 복잡한 계산 로직, 데이터베이스 CRUD 연산, 외부 API 통신, 그리고 트랜잭션 관리까지 다양한 책임을 지니고 있다.\n실무에서 코드를 파악할 일이나 유지보수할 일이 생기면 가장 먼저 찾고 코드를 보는데 많…","fields":{"slug":"/java-collection-wrapper/"},"frontmatter":{"date":"June 23, 2023","update":"Jun 23, 2023","title":"Collection Wrapper 클래스를 이용한 Service 계층 리팩토링 ","description":null,"tags":["스프링"]}},{"excerpt":"1. 개요 일반적으로 Spring 환경에서 Amazon SQS 라이브러리로  모듈을 사용합니다.  을 분석하고, 단점을 보완한 모듈을 설계하는 것을 목표로 합니다. 2. Spring Cloud AWS Messaging 모듈  모듈을 사용하면 를 추상화한 API를 사용해 쉽게 와 를 구현할 수 있습니다. 아래와 같이 간단한 설정만으로 Consumer의 경우…","fields":{"slug":"/Spring Cloud AWS Messaging Module Best Practice/"},"frontmatter":{"date":"June 20, 2023","update":"Jun 20, 2023","title":"Spring Cloud AWS Messaging 모듈 문제점 및 튜닝","description":null,"tags":["AWS"]}},{"excerpt":"대기열 유형 표준 대기열(Standard) 무제한 처리량 : API 작업당 거의 무제한의 TPS를 지원 최소한 한 번 전달(At-least-once delivery) : 메시가 최소한 한 번 전달되고, 가끔 2개 이상의 메시지 복사본이 전달될 수 있다. 순서 보장을 위해 최선의 노력 : 가끔 메시지가 전송된 순서와 다르게 전달될 수 있음.  FIFO 대기…","fields":{"slug":"/Amazon SQS Deep Dive/"},"frontmatter":{"date":"June 19, 2023","update":"Jun 19, 2023","title":"Amazon SQS 딥다이브","description":null,"tags":["AWS"]}},{"excerpt":"카프카 스트림즈란? 사용자가 Kafka에서 데이터를 실시간으로 처리하는 상태 저장 스트림 처리 애플리케이션을 구축할 수 있게 해준다.\nStreams API로 개발된 애플리케이션은 이벤트 시간(즉, 데이터가 실제로 현실 세계에서 생성된 시점)을 기준으로 실시간 스트리밍 데이터를 처리하며, 늦게 도착하는 레코드도 지원한다.\n이를 통해 데이터 처리를 신속하게 …","fields":{"slug":"/\benabling_exactly_once_kafka_streams/"},"frontmatter":{"date":"June 16, 2023","update":"Jun 16, 2023","title":"카프카 스트림즈의 정확히 한 번","description":null,"tags":["카프카"]}}]},"totalMarkdown":{"group":[{"fieldValue":"AWS","totalCount":2},{"fieldValue":"JPA","totalCount":1},{"fieldValue":"Java","totalCount":8},{"fieldValue":"Tomcat","totalCount":2},{"fieldValue":"데이터 중심 애플리케이션 설계","totalCount":8},{"fieldValue":"데이터베이스","totalCount":1},{"fieldValue":"디자인 패턴","totalCount":3},{"fieldValue":"레디스","totalCount":1},{"fieldValue":"스프링","totalCount":5},{"fieldValue":"실무로 배우는 시스템 성능 최적화","totalCount":7},{"fieldValue":"카프카","totalCount":3}],"nodes":[{"fields":{"slug":"/java-nio-channel/"}},{"fields":{"slug":"/spring-core-container/"}},{"fields":{"slug":"/tomcat-connection/"}},{"fields":{"slug":"/java-nio-buffer/"}},{"fields":{"slug":"/socket_option/"}},{"fields":{"slug":"/tomcat/"}},{"fields":{"slug":"/java-concurrency-lock/"}},{"fields":{"slug":"/java-concurrency-deadlock/"}},{"fields":{"slug":"/java-concurrency-executor/"}},{"fields":{"slug":"/java-concurrency-model/"}},{"fields":{"slug":"/java-concurrency/"}},{"fields":{"slug":"/mysql-primary-key-design/"}},{"fields":{"slug":"/ehcache3/"}},{"fields":{"slug":"/jpa-slow-cause/"}},{"fields":{"slug":"/redis-event-notifications/"}},{"fields":{"slug":"/spring-cache-hierarchy/"}},{"fields":{"slug":"/java-collection-wrapper/"}},{"fields":{"slug":"/Spring Cloud AWS Messaging Module Best Practice/"}},{"fields":{"slug":"/Amazon SQS Deep Dive/"}},{"fields":{"slug":"/\benabling_exactly_once_kafka_streams/"}},{"fields":{"slug":"/trasaction_in_kafka/"}},{"fields":{"slug":"/Exactly_Once_Semantics/"}},{"fields":{"slug":"/create/"}},{"fields":{"slug":"/struct/"}},{"fields":{"slug":"/behavior/"}},{"fields":{"slug":"/spring-autoconfigure/"}},{"fields":{"slug":"/ch7/"}},{"fields":{"slug":"/ch6/"}},{"fields":{"slug":"/ch5/"}},{"fields":{"slug":"/ch4/"}},{"fields":{"slug":"/ch3/"}},{"fields":{"slug":"/ch2/"}},{"fields":{"slug":"/ch1/"}},{"fields":{"slug":"/ch8/"}},{"fields":{"slug":"/ch7/"}},{"fields":{"slug":"/ch6/"}},{"fields":{"slug":"/ch5/"}},{"fields":{"slug":"/ch4/"}},{"fields":{"slug":"/ch3/"}},{"fields":{"slug":"/ch2/"}},{"fields":{"slug":"/ch1/"}}]}},"pageContext":{"skip":10,"totalPage":5,"currentPage":2}},"staticQueryHashes":[],"slicesMap":{}}