{"version":3,"file":"component---src-templates-post-pagination-jsx-1dcfa96f631db8adcb36.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/Bio/index.jsx","webpack://gatsby-starter-hoodie/./src/components/PageIndex/index.jsx","webpack://gatsby-starter-hoodie/./src/components/PostList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/SideTagList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/TagList/index.jsx","webpack://gatsby-starter-hoodie/./src/templates/PostPagination.jsx","webpack://gatsby-starter-hoodie/./node_modules/lodash/map.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  FaGithub,\n  FaKaggle,\n  FaFacebook,\n  FaLinkedin,\n  FaInstagram,\n  FaLink,\n  FaEnvelope,\n} from \"react-icons/fa\"\n\nimport { siteUrl, description, author, links } from \"../../../blog-config\"\n\nconst BioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 860px) {\n    padding: 0 15px;\n  }\n`\n\nconst profileImageRoot =\n  typeof window !== \"undefined\" && window.location.host === \"localhost:8000\"\n    ? \"http://localhost:8000\"\n    : siteUrl\n\nconst Profile = styled.div`\n  flex: 0 0 auto;\n  margin-right: 16px;\n  width: 128px;\n  height: 128px;\n  border-radius: 999px;\n  background-image: url(${profileImageRoot}/profile.png);\n  background-size: cover;\n  background-position: center;\n`\n\nconst Author = styled.div`\n  margin-bottom: 4.8px;\n  font-size: 24px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.text};\n`\n\nconst Description = styled.div`\n  margin-bottom: 11.2px;\n  line-height: 1.5;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst LinksWrapper = styled.div`\n  & a {\n    margin-right: 9.6px;\n  }\n\n  & svg {\n    width: 25.6px;\n    height: 25.6px;\n    cursor: pointer;\n  }\n\n  & svg path {\n    fill: ${props => props.theme.colors.icon};\n    transition: fill 0.3s;\n  }\n\n  & a:hover svg path {\n    fill: ${props => props.theme.colors.text};\n  }\n`\n\nconst Link = ({ link, children }) => {\n  if (!link) return null\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nconst Bio = () => {\n  const { github, kaggle, instagram, facebook, linkedIn, email, etc } = links\n\n  return (\n    <BioWrapper id=\"bio\">\n      <Profile />\n      <div>\n        <Author>@{author}</Author>\n        <Description>{description}</Description>\n        <LinksWrapper>\n          <Link link={github}>\n            <FaGithub />\n          </Link>\n          <Link link={kaggle}>\n            <FaKaggle />\n          </Link>\n          <Link link={instagram}>\n            <FaInstagram />\n          </Link>\n          <Link link={facebook}>\n            <FaFacebook />\n          </Link>\n          <Link link={linkedIn}>\n            <FaLinkedin />\n          </Link>\n          <Link link={email}>\n            <FaEnvelope />\n          </Link>\n          <Link link={etc}>\n            <FaLink />\n          </Link>\n        </LinksWrapper>\n      </div>\n    </BioWrapper>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport {Link} from \"gatsby\"\nimport styled from \"styled-components\";\n\n// 스타일드 컴포넌트를 사용하여 스타일 정의\nconst PageIndexContainer = styled.div`\n  text-align: center;\n  margin-bottom: 48px;\n  color: ${props => props.theme.colors.text};;\n  //margin-top: 30px;\n  & > a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst PageLink = styled(Link)`\n  text-decoration: none;\n  margin: 0 1px;\n  padding: 5px 10px;\n  transition: background-color 0.3s, color 0.3s;\n  color: ${props => props.theme.colors.text};;\n\n  &:hover {\n    text-decoration: none;\n    border-bottom: 2px solid ${props => props.theme.colors.hrefLink};;\n    color: ${props => props.theme.colors.text};;\n  }\n`;\n\nconst CurrentPageLink = styled(PageLink)`\n  border-bottom: 2px solid ${props => props.theme.colors.hrefLink};;\n  color: ${props => props.theme.colors.text};;\n`;\n\nconst PageIndex = ({currentPage, totalPage}) => {\n  const indexSize = 5\n  const pageNumbers = Array.from({length: totalPage}, (_, i) => i + 1)\n  const startPage = Math.min(Math.max(1, currentPage - 2),\n      totalPage - indexSize >=1 ? totalPage - indexSize : 1)\n  const endPage = Math.min(startPage + indexSize - 1, totalPage)\n\n  return (\n      <PageIndexContainer>\n        {currentPage > 3 && totalPage > indexSize && (\n            <PageLink to={currentPage === 2 ? \"/\" : `/page/${currentPage - 1}`}>\n              &lt;\n            </PageLink>\n        )}\n        {pageNumbers.slice(startPage - 1, endPage).map((number) => (\n            <Link\n                key={number}\n                to={number === 1 ? \"/\" : `/page/${number}`}\n                className={number === currentPage ? \"current-page\" : \"\"}\n            >\n              {number === currentPage ? (\n                  <CurrentPageLink\n                      to={`/page/${number}`}>{number}</CurrentPageLink>\n              ) : (\n                  <PageLink to={`/page/${number}`}>{number}</PageLink>\n              )}\n            </Link>\n        ))}\n        {currentPage < totalPage - 3 && totalPage > indexSize && (\n            <PageLink to={`/page/${currentPage + 1}`}>&gt;</PageLink>\n        )}\n      </PageIndexContainer>\n  )\n}\n\nexport default PageIndex\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\nimport TagList from \"components/TagList\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 860px) {\n    padding: 0 10px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 860px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  margin-bottom: 16px;\n  font-size: 14.4px;\n  color: ${props => props.theme.colors.tertiaryText};\n`\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n  word-break: break-all;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, description, date, tags } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        return (\n          <>\n            <PostWrapper>\n              <TagList tagList={tags} />\n              <Title size=\"md\">\n                <Link to={slug}>{title}</Link>\n              </Title>\n              <Date>{date}</Date>\n              {description ? (\n                <Excerpt>{description}</Excerpt>\n              ) : (\n                <Excerpt>{excerpt}</Excerpt>\n              )}\n\n            </PostWrapper>\n\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst RelativeWrapper = styled.div`\n  position: relative;\n`\n\nconst Wrapper = styled.aside`\n  position: absolute;\n  left: 112%;\n  top: 0px;\n  width: 200px;\n  height: 100px;\n  font-size: 16px;\n\n  @media (max-width: 1300px) {\n    display: none;\n  }\n`\n\nconst Title = styled.div`\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst Tag = styled.li`\n  margin-bottom: 16px;\n  color: ${props => props.theme.colors.tertiaryText};\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.colors.text};\n  }\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n\nconst SideTagList = ({ tags, postCount }) => {\n  return (\n    <RelativeWrapper>\n      <Wrapper>\n        <Title>TAG LIST</Title>\n        <ul>\n          <Tag>\n            <Link to=\"/tags\">all ({postCount})</Link>\n          </Tag>\n          {_.map(tags, tag => (\n            <Tag>\n              <Link to={`/tags?q=${tag.fieldValue}`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </Tag>\n          ))}\n        </ul>\n      </Wrapper>\n    </RelativeWrapper>\n  )\n}\n\nexport default SideTagList\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 16px;\n  word-break: break-all;\n`\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 9.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 0px;\n  border-radius: 50px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 13px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`\n\nconst spaceToDash = text => {\n  return text.replace(/\\s+/g, \"-\")\n}\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    )\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? \"/tags\" : `/tags?q=${tag.fieldValue}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  )\n}\n\nexport default TagList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport {graphql} from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport Bio from \"components/Bio\"\nimport PostList from \"components/PostList\"\nimport PageIndex from \"components/PageIndex\"\nimport SideTagList from \"components/SideTagList\"\nimport Divider from \"components/Divider\"\nimport VerticalSpace from \"components/VerticalSpace\"\n\nimport {title, description, siteUrl} from \"../../blog-config\"\n\nconst PostPagination = ({data, pageContext}) => {\n\n  const posts = data.paging.nodes\n  const tags = _.sortBy(data.totalMarkdown.group, [\"totalCount\"]).reverse()\n  const {currentPage, totalPage} = pageContext // 현재 페이지와 총 페이지 수\n\n  if (posts.length === 0) {\n    return (\n        <p>\n          No blog posts found. Add markdown posts\n          to &quot;content/blog&quot; (or\n          the directory you specified for\n          the &quot;gatsby-source-filesystem&quot;\n          plugin in gatsby-config.js).\n        </p>\n    )\n  }\n\n  return (\n      <Layout>\n        <SEO title={title} description={description} url={siteUrl}/>\n        <VerticalSpace size={48}/>\n        <Bio/>\n        <Divider/>\n        <SideTagList tags={tags} postCount={data.totalMarkdown.nodes.length}/>\n        <PostList postList={posts}/>\n        <Divider/>\n        <PageIndex currentPage={currentPage} totalPage={totalPage} />\n      </Layout>\n  )\n}\nexport default PostPagination\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($skip: Int!) {\n        paging: allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            skip: $skip\n            limit: 10\n        ){\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n            nodes {\n                excerpt(pruneLength: 200, truncate: true)\n                fields {\n                    slug\n                }\n                frontmatter {\n                    date(formatString: \"MMMM DD, YYYY\")\n                    update(formatString: \"MMM DD, YYYY\")\n                    title\n                    description\n                    tags\n                }\n            }\n        }\n        totalMarkdown: allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ){\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n            nodes{\n                fields {\n                    slug\n                }\n            }\n        }\n    }\n`\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["BioWrapper","styled","div","withConfig","displayName","componentId","profileImageRoot","window","location","host","siteUrl","Profile","Author","props","theme","colors","text","Description","secondaryText","LinksWrapper","icon","Link","_ref","link","children","React","href","target","rel","Bio","github","kaggle","instagram","facebook","linkedIn","email","etc","links","id","author","description","FaGithub","FaKaggle","FaInstagram","FaFacebook","FaLinkedin","FaEnvelope","FaLink","PageIndexContainer","PageLink","hrefLink","CurrentPageLink","currentPage","totalPage","pageNumbers","Array","from","length","_","i","startPage","Math","min","max","endPage","to","slice","map","number","key","className","PostListWrapper","PostWrapper","Date","p","tertiaryText","Excerpt","postList","postCount","setPostCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","setTimeout","useEffect","addEventListener","removeEventListener","post","title","date","tags","frontmatter","excerpt","slug","fields","TagList","tagList","Title","size","Divider","mt","mb","RelativeWrapper","Wrapper","aside","Tag","li","_map","tag","fieldValue","totalCount","TagListWrapper","TagLink","selected","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","spaceToDash","replace","count","JSON","stringify","data","pageContext","posts","paging","nodes","_sortBy","totalMarkdown","group","reverse","Layout","SEO","url","VerticalSpace","SideTagList","PostList","PageIndex","arrayMap","baseIteratee","baseMap","isArray","module","exports","collection","iteratee"],"sourceRoot":""}